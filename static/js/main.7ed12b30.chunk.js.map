{"version":3,"sources":["serviceWorker.js","api/index.js","components/Info/index.js","components/PatientList/index.js","Home/index.js","components/PatientInfo/index.js","components/Vitals/schema.js","components/Vitals/index.js","components/Encounter/schema.js","components/Encounter/index.js","components/Condition/schema.js","components/Condition/index.js","components/Immunization/schema.js","components/Immunization/index.js","Summary/index.js","index.js"],"names":["Boolean","window","location","hostname","match","querProp","params","Object","keys","reduce","all","key","Array","isArray","length","temp","JSON","stringify","push","encodeURI","join","getPatients","serverAddress","serverHeaders","queryParams","axios","get","headers","Info","props","text","icon","className","size","name","type","appearance","PatientList","data","onClick","entry","patients","map","item","index","ev","resource","id","given","charAt","family","birthDate","gender","getPatientCard","Home","history","useHistory","getServer","server","localStorage","getItem","getHeaders","useState","fhirServer","setServer","setHeaders","invalidHeader","setHeaderStatus","modalState","setModalState","searchQuery","setSearchQuery","searchGender","setSearchGender","setPatients","error","setError","errText","setErrText","onModalClose","modalOptions","open","onClose","backdrop","dimension","modalHeaderOptions","heading","subHeading","handleServerInput","value","useEffect","parse","then","catch","err","console","log","handleSearchInput","drillToPatientInfo","style","margin","clearButton","placeholder","onChange","target","onClear","rows","e","handleHeaderInput","defaultValue","setItem","disabled","display","justifyContent","alignItems","width","options","label","selected","height","overflowY","columnOptions","sizeXL","sizeM","PatientInfo","loading","shadow","padding","backgroundColor","withImage","round","imageSize","maritalStatus","telecom","schema","displayName","resizable","Vitals","loinc","vitalData","dataArr","filteredData","forEach","code","coding","some","c","includes","valueQuantity","slice","unit","valStr","iDate","issued","Date","getMonth","getDate","getFullYear","component","comp","cName","cValue","cUnit","cValStr","compDataObj","dataObj","filterData","noData","Encounter","encLoading","setEncLoading","encData","setEncData","setNoData","getRefResource","baseAddress","ref","a","pRef","oRef","idx","participant","providerRef","individual","reference","orgRef","serviceProvider","provider","facility","rType","lType","sDate","period","start","dateStr","startDate","pIdx","indexOf","oIdx","providerData","firstName","lastName","pName","orgData","oName","oTelecom","facilityTel","Condition","conData","verificationStatus","severity","codeText","rDate","recordedDate","toUpperCase","Immunization","immuneData","oDate","occurrenceDateTime","occurenceDate","vaccine","vaccineCode","status","Summary","patientId","useParams","patientData","setPatientData","vitalsData","setVitalsData","encounterData","setEncounterData","conditionData","setConditionData","immunizationData","setImmunizationData","patientLoading","setPatientLoading","vitalsLoading","setVitalsLoading","encounterLoading","setEncounterLoading","conditionLoading","setConditionLoading","immuneLoading","setImmuneLoading","getPatientData","getVitalsData","filtered","getEncounterData","getConditionData","getImmunizationData","pageheaderOptions","title","breadcrumb","list","link","ReactDOM","render","StrictMode","basename","process","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7ed12b30.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\n\nlet querProp = {\n  stringifyQueryParams(params) {\n    return Object.keys(params)\n      .reduce((all, key) => {\n        if (params[key] && params[key] !== '') {\n          if (Array.isArray(params[key])) {\n            if (params[key].length > 0) {\n              const temp = JSON.stringify(params[key]);\n              all.push(`${key}=${encodeURI(temp)}`);\n            }\n          } else {\n            all.push(`${key}=${encodeURI(params[key])}`);\n          }\n        }\n        return all;\n      }, [])\n      .join('&');\n  }\n};\n\nexport const getPatients = (serverAddress, serverHeaders = {}) => (params) => {\n  const queryParams = querProp.stringifyQueryParams(params);\n  return axios.get(`${serverAddress}/Patient?${queryParams}`, {\n    headers: serverHeaders\n  });\n};\n\nexport const getPatientData = (serverAddress, serverHeaders = {}) => (id) => {\n  return axios.get(`${serverAddress}/Patient/${id}`, {\n    headers: serverHeaders\n  });\n};\n\nexport const getObservationData = (serverAddress, serverHeaders = {}) => (id) => {\n  return axios.get(`${serverAddress}/Observation?patient=${id}`, {\n    headers: serverHeaders\n  });\n};\n\nexport const getVitalsData = (serverAddress, serverHeaders = {}) => (id) => {\n  // to get only some vitals use loinc codes\n  // use [base]/Observation?patient=patient_id&code=loinc_code1,loinc_code2\n\n  return axios.get(`${serverAddress}/Observation?patient=${id}&category=vital-signs`, {\n    headers: serverHeaders\n  });\n};\n\nexport const getEncounterData = (serverAddress, serverHeaders = {}) => (id) => {\n  return axios.get(`${serverAddress}/Encounter?patient=${id}`, {\n    headers: serverHeaders\n  });\n};\n\nexport const getConditionData = (serverAddress, serverHeaders = {}) => (id) => {\n  return axios.get(`${serverAddress}/Condition?patient=${id}`, {\n    headers: serverHeaders\n  });\n};\n\nexport const getImmunizationData = (serverAddress, serverHeaders = {}) => (id) => {\n  return axios.get(`${serverAddress}/Immunization?patient=${id}`, {\n    headers: serverHeaders\n  });\n};\n","import React from 'react';\nimport { Icon, Heading, Card, Row, Column } from '@innovaccer/design-system';\nimport './Info.css';\n\nconst Info = (props) => {\n  const { text, icon } = props;\n\n  return (\n    <div className=\"Info-wrapper\">\n      <Icon size=\"37\" name={icon} type=\"filled\" appearance=\"subtle\" />\n      <Heading appearance=\"subtle\" size=\"m\">\n        {text}\n      </Heading>\n    </div>\n  );\n};\n\nexport default Info;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Avatar, Heading, Badge, Subheading } from '@innovaccer/design-system';\nimport './PatientList.css';\nimport Info from '../Info';\n\nconst PatientList = (props) => {\n  const { data = {}, onClick } = props;\n\n  const getPatientCard = (patients = []) => {\n    return patients.map((item, index) => {\n      return (\n        <div className=\"PatientList-itemWrapper\" key={index} onClick={(ev) => onClick(ev, item.resource.id)}>\n          <div className=\"PatientList-item-heading\">\n            <Avatar appearance=\"primary\">\n              {`${item.resource.name[0].given[0].charAt(0)}${item.resource.name[0].family.charAt(0)}`}\n            </Avatar>\n            <Heading size=\"m\">{`${item.resource.name[0].given[0]}, ${item.resource.name[0].family}`}</Heading>\n            <Badge appearance=\"secondary\">{item.resource.id}</Badge>\n          </div>\n          <div className=\"PatientList-item-info\">\n            <Subheading appearance=\"default\">DOB: </Subheading>\n            <Subheading appearance=\"subtle\">{item.resource.birthDate}</Subheading>\n            <Subheading appearance=\"default\">Gender: </Subheading>\n            <Subheading appearance=\"subtle\">{item.resource.gender}</Subheading>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"PatientList\">\n      {data.entry && data.entry.length === 0 ? <Info text=\"No data found\" icon=\"error\" /> : getPatientCard(data.entry)}\n    </div>\n  );\n};\n\nexport default PatientList;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Input,\n  Button,\n  Heading,\n  Textarea,\n  Label,\n  Dropdown\n} from '@innovaccer/design-system';\nimport { useHistory } from 'react-router-dom';\nimport './Home.css';\nimport { getPatients } from '../api';\nimport PatientList from '../components/PatientList';\nimport Info from '../components/Info';\n\nconst Home = () => {\n  let history = useHistory();\n  const getServer = () => {\n    const server = localStorage.getItem('fhirServer');\n    return server ? server : '';\n  };\n\n  const getHeaders = () => {\n    const data = localStorage.getItem('serverHeaders');\n    return data ? data : '{}';\n  };\n\n  const [fhirServer, setServer] = useState(getServer());\n  const [serverHeaders, setHeaders] = useState(getHeaders());\n  const [invalidHeader, setHeaderStatus] = useState(false);\n  const [modalState, setModalState] = useState(getServer() ? false : true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchGender, setSearchGender] = useState('');\n  const [patients, setPatients] = useState([]);\n  const [error, setError] = useState(false);\n  const [errText, setErrText] = useState('');\n\n  const onModalClose = () => {\n    if (getServer()) {\n      setModalState(false);\n      setServer(getServer());\n    } else {\n      return null;\n    }\n  };\n\n  const modalOptions = {\n    open: modalState,\n    onClose: onModalClose,\n    backdrop: false,\n    dimension: 'small'\n  };\n\n  const modalHeaderOptions = {\n    onClose: onModalClose,\n    icon: 'pan_tool',\n    heading: 'FHIR Server',\n    subHeading: 'FHIR Server address'\n  };\n\n  const handleServerInput = (value) => {\n    setServer(value);\n  };\n\n  const handleHeaderInput = (value) => {\n    let temp;\n    try {\n      temp = JSON.parse(value);\n      setHeaderStatus(false);\n      setHeaders(value);\n    } catch (e) {\n      setHeaderStatus(true);\n      setHeaders(value);\n    }\n  };\n\n  const updateServer = () => {\n    localStorage.setItem('fhirServer', fhirServer);\n    localStorage.setItem('serverHeaders', serverHeaders);\n    setModalState(false);\n    setPatients([]);\n  };\n\n  useEffect(() => {\n    setServer(getServer());\n    setHeaders(getHeaders());\n    setError(false);\n    if (getServer()) {\n      getPatients(\n        fhirServer,\n        JSON.parse(serverHeaders)\n      )({ name: searchQuery, gender: searchGender })\n        .then((data) => {\n          setPatients(data.data);\n        })\n        .catch((err) => {\n          console.log(err);\n          setError(true);\n          setErrText('Something went wrong');\n        });\n    }\n  }, [localStorage.getItem('fhirServer'), modalState]);\n\n  const handleSearchInput = (value) => {\n    setSearchQuery(value);\n  };\n\n  const handleGenderInput = (selected, name) => {\n    setSearchGender(selected);\n  };\n\n  const handleSearch = () => {\n    getPatients(\n      fhirServer,\n      JSON.parse(serverHeaders)\n    )({ name: searchQuery, gender: searchGender })\n      .then((data) => {\n        setPatients(data.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setError(true);\n        setErrText('Something went wrong');\n      });\n  };\n\n  const drillToPatientInfo = (ev, id) => {\n    history.push(`/patients/${id}`);\n  };\n\n  const genderOptions = [\n    { label: 'Male', value: 'male' },\n    { label: 'Female', value: 'female' }\n  ];\n\n  const renderPatientList = () => {\n    if (error) {\n      return <Info text={errText} icon=\"error\" />;\n    } else {\n      if (patients && patients.entry && patients.entry.length > 0) {\n        return (\n          <div style={{ height: 'calc(100vh - 112px', overflowY: 'scroll' }}>\n            <PatientList data={patients} onClick={drillToPatientInfo} />\n          </div>\n        );\n      }\n    }\n  };\n\n  return (\n    <div className=\"Home\">\n      <Modal {...modalOptions}>\n        <ModalHeader {...modalHeaderOptions} />\n        <ModalBody>\n          <Label style={{ margin: '0px 0 4px' }}>Address</Label>\n          <Input\n            clearButton={true}\n            value={fhirServer}\n            name=\"input\"\n            placeholder=\"Search\"\n            onChange={(ev) => handleServerInput(ev.target.value)}\n            onClear={() => handleServerInput('')}\n          />\n          <Label style={{ margin: '8px 0 4px' }}>Headers</Label>\n          <Textarea\n            name=\"Textarea\"\n            placeholder=\"Headers\"\n            rows={5}\n            onChange={(ev) => handleHeaderInput(ev.target.value)}\n            defaultValue={serverHeaders}\n            error={invalidHeader}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Button appearance=\"primary\" onClick={() => updateServer()} disabled={!fhirServer || invalidHeader}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <div className=\"PageHeader-wrapper\">\n        <div className=\"PageHeader\">\n          <Heading size=\"m\">Patients</Heading>\n          <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n            <Button appearance=\"primary\" onClick={() => setModalState(true)}>\n              Change Server\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className=\"Search-wrapper\">\n        <Input\n          clearButton={true}\n          value={searchQuery}\n          icon=\"search\"\n          name=\"input\"\n          placeholder=\"Search\"\n          onChange={(ev) => handleSearchInput(ev.target.value)}\n          onClear={() => handleSearchInput('')}\n        />\n        <div style={{ width: '150px' }}>\n          <Dropdown options={genderOptions} placeholder={'Gender'} onChange={handleGenderInput} />\n        </div>\n        <Button appearance=\"primary\" onClick={() => handleSearch()}>\n          Search\n        </Button>\n      </div>\n      {renderPatientList()}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport {\n  Avatar,\n  Heading,\n  Badge,\n  Card,\n  Row,\n  Column,\n  Subheading,\n  Placeholder,\n  PlaceholderParagraph\n} from '@innovaccer/design-system';\nimport './PatientInfo.css';\n\nconst columnOptions = {\n  size: '6',\n  sizeXL: '6',\n  sizeM: '6'\n};\n\nconst PatientInfo = (props) => {\n  const { data = {}, loading } = props;\n\n  const loadingRender = () => {\n    return (\n      <div>\n        <Placeholder withImage round imageSize=\"medium\">\n          <PlaceholderParagraph length=\"large\" />\n        </Placeholder>\n        <div className=\"PatientInfo-loading\">\n          <Placeholder>\n            <PlaceholderParagraph length=\"medium\" />\n          </Placeholder>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Card\n      shadow=\"dark\"\n      style={{\n        width: '600px',\n        padding: '16px',\n        backgroundColor: 'white'\n      }}\n    >\n      {loading ? (\n        loadingRender()\n      ) : (\n        <div>\n          <div className=\"PatientInfo-heading\">\n            <Avatar appearance=\"primary\">{`${data.name[0].given[0].charAt(0)}${data.name[0].family.charAt(0)}`}</Avatar>\n            <Heading size=\"m\">{`${data.name[0].given[0]}, ${data.name[0].family}`}</Heading>\n            <Badge appearance=\"secondary\">{data.id}</Badge>\n          </div>\n          <div className=\"PatientInfo-body\">\n            <Row>\n              <Column {...columnOptions}>\n                <div className=\"PatientInfo-item\">\n                  <Subheading appearance=\"default\">DOB: </Subheading>\n                  <Subheading appearance=\"subtle\">{data.birthDate}</Subheading>\n                </div>\n              </Column>\n              <Column {...columnOptions}>\n                <div className=\"PatientInfo-item\">\n                  <Subheading appearance=\"default\">Gender: </Subheading>\n                  <Subheading appearance=\"subtle\">{data.gender}</Subheading>\n                </div>\n              </Column>\n            </Row>\n            <Row>\n              <Column {...columnOptions}>\n                <div className=\"PatientInfo-item\">\n                  <Subheading appearance=\"default\">Marital Status: </Subheading>\n                  <Subheading appearance=\"subtle\">{data.maritalStatus ? data.maritalStatus.text : 'N/A'}</Subheading>\n                </div>\n              </Column>\n              <Column {...columnOptions}>\n                <div className=\"PatientInfo-item\">\n                  <Subheading appearance=\"default\">Contact: </Subheading>\n                  <Subheading appearance=\"subtle\">{data.telecom ? data.telecom[0].value : 'N/A'}</Subheading>\n                </div>\n              </Column>\n            </Row>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default PatientInfo;\n","export const schema = [\n  {\n    name: 'name',\n    displayName: 'Name',\n    width: 200,\n    resizable: true\n  },\n  {\n    name: 'value',\n    displayName: 'Value',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'issued',\n    displayName: 'Issued Date',\n    width: 150,\n    resizable: true\n  }\n];\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Table } from '@innovaccer/design-system';\nimport { schema } from './schema';\nimport Info from '../Info';\n\nconst Vitals = (props) => {\n  // 29463-7 => Body weight\n  // 8302-2 => Body height\n  // 39156-5 => BMI\n  // 85354-9 => B.P.\n  // 55284-4 => B.P. => handles both systolic (8480-6) and diastolic (8462-4)\n  // by default shows these four\n\n  const { data = [], loading, loinc = ['29463-7', '8302-2', '39156-5', '55284-4', '85354-9'] } = props;\n\n  const filterData = (dataArr) => {\n    const filteredData = [];\n\n    dataArr.forEach((resource) => {\n      const code = resource.code && resource.code.coding && resource.code.coding[0] ? resource.code.coding : '-';\n      if (code !== '-') {\n        const isPresent = code.some((coding) => {\n          const c = coding.code ? coding.code : '-';\n          return loinc.includes(c);\n        });\n\n        if (isPresent) {\n          const name = code[0].display ? code[0].display : '-';\n          const value =\n            resource.valueQuantity && resource.valueQuantity.value\n              ? `${resource.valueQuantity.value}`.slice(0, 5)\n              : '-';\n          const unit = resource.valueQuantity && resource.valueQuantity.unit ? resource.valueQuantity.unit : '-';\n          const valStr = `${value} ${unit}`;\n          const iDate = resource.issued ? new Date(resource.issued) : '-';\n          const issued = iDate === '-' ? '-' : `${iDate.getMonth() + 1}-${iDate.getDate()}-${iDate.getFullYear()}`;\n\n          if (Array.isArray(resource.component)) {\n            resource.component.forEach((comp) => {\n              const cName =\n                comp.code && comp.code.coding && comp.code.coding[0] && comp.code.coding[0].display\n                  ? comp.code.coding[0].display\n                  : '-';\n\n              const cValue =\n                comp.valueQuantity && comp.valueQuantity.value ? `${comp.valueQuantity.value}`.slice(0, 5) : '-';\n              const cUnit = comp.valueQuantity && comp.valueQuantity.unit ? comp.valueQuantity.unit : '-';\n              const cValStr = `${cValue} ${cUnit}`;\n\n              const compDataObj = {\n                issued,\n                name: cName,\n                value: cValStr\n              };\n              filteredData.push(compDataObj);\n            });\n          } else {\n            const dataObj = {\n              name,\n              issued,\n              value: valStr\n            };\n            filteredData.push(dataObj);\n          }\n        }\n      }\n    });\n\n    return filteredData;\n  };\n\n  const vitalData = filterData(data);\n  const noData = !loading && vitalData.length === 0;\n\n  return <Table data={vitalData} schema={schema} error={noData} loading={loading} />;\n};\n\nexport default Vitals;\n","export const schema = [\n  {\n    name: 'facility',\n    displayName: 'Facility Name',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'lType',\n    displayName: 'Encounter Type',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'provider',\n    displayName: 'Provider',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'facilityTel',\n    displayName: 'Facility contact',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'startDate',\n    displayName: 'Start Date',\n    width: 150,\n    resizable: true\n  }\n];\n","import axios from 'axios';\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { schema } from './schema';\nimport { Table } from '@innovaccer/design-system';\nimport Info from '../Info';\n\nconst Encounter = (props) => {\n  const { data = [], fhirServer, serverHeaders, loading } = props;\n\n  const [encLoading, setEncLoading] = useState(true);\n  const [encData, setEncData] = useState([]);\n  const [noData, setNoData] = useState(false);\n\n  // send api request\n  const getRefResource = (baseAddress, headers, ref) => {\n    return axios.get(`${baseAddress}/${ref}`, {\n      headers: headers\n    });\n  };\n\n  // filter required data and make api requests for provider, organization\n  const filterData = async (baseAddress, headers, data) => {\n    let pRef = [];\n    let oRef = [];\n    let encData = [];\n\n    for (let idx = 0; idx < data.length; idx++) {\n      const resource = data[idx];\n      const participant = resource.participant && resource.participant.length > 0 ? resource.participant[0] : '-';\n      const providerRef =\n        participant && participant.individual && participant.individual.reference\n          ? participant.individual.reference\n          : '';\n      const orgRef =\n        resource.serviceProvider && resource.serviceProvider.reference ? resource.serviceProvider.reference : '';\n\n      let provider = '-';\n      let facility = '-';\n\n      // get value for location type, startData\n      const rType = resource.type && resource.type.length > 0 ? resource.type[0] : '-';\n      const lType = rType && rType.text ? rType.text : '-';\n      const sDate = resource.period && resource.period.start ? resource.period.start : '-';\n      const dateStr = sDate === '-' ? '-' : new Date(sDate);\n      const startDate =\n        dateStr === '-' ? '-' : `${dateStr.getMonth() + 1}-${dateStr.getDate()}-${dateStr.getFullYear()}`;\n\n      const pIdx = pRef.indexOf(providerRef);\n      const oIdx = oRef.indexOf(orgRef);\n\n      if (providerRef !== '' && pIdx === -1) {\n        const providerData = await getRefResource(baseAddress, headers, providerRef);\n        const firstName =\n          providerData.data.name &&\n          providerData.data.name[0] &&\n          providerData.data.name[0].given &&\n          providerData.data.name[0].given[0]\n            ? providerData.data.name[0].given[0]\n            : ' ';\n        const lastName =\n          providerData.data.name && providerData.data.name[0] && providerData.data.name[0].family\n            ? providerData.data.name[0].family\n            : ' ';\n\n        const pName = `${firstName}, ${lastName}`;\n        // two pushes making sure we get value at pIdx + 1\n        pRef.push(providerRef);\n        pRef.push(pName);\n      } else if (providerRef !== '' && pIdx !== -1) {\n        provider = pRef[pIdx + 1];\n      }\n\n      if (orgRef !== '' && oIdx === -1) {\n        const orgData = await getRefResource(baseAddress, headers, orgRef);\n        const oName = orgData.data.name ? orgData.data.name : '-';\n        const oTelecom =\n          orgData.data.telecom && orgData.data.telecom[0] && orgData.data.telecom[0].value\n            ? orgData.data.telecom[0].value\n            : '-';\n        // two pushes ensuring we get values at oIdx + 1\n        oRef.push(orgRef);\n        oRef.push([oName, oTelecom]);\n      } else if (orgRef !== '' && oIdx !== -1) {\n        facility = oRef[oIdx + 1];\n      }\n\n      const dataObj = {\n        lType,\n        provider,\n        startDate,\n        facility: facility[0],\n        facilityTel: facility[1]\n      };\n\n      encData.push(dataObj);\n    }\n\n    return encData;\n  };\n\n  useEffect(() => {\n    setEncLoading(true);\n    filterData(fhirServer, serverHeaders, data).then((encData) => {\n      setEncData(encData);\n      setEncLoading(false);\n      if (encData && encData.length === 0 && !(loading || encLoading)) {\n        setNoData(true);\n      }\n    });\n  }, [encData.length, loading]);\n\n  // return <>{console.log(data.length, encData.length, loading, encLoading, noData)}</>;\n  return <Table data={encData} error={noData} loading={loading || encLoading} schema={schema} />;\n};\n\nexport default Encounter;\n","export const schema = [\n  {\n    name: 'codeText',\n    displayName: 'Condition Name',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'severity',\n    displayName: 'Severity',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'verificationStatus',\n    displayName: 'Status',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'recordedDate',\n    displayName: 'Recorded Date',\n    width: 150,\n    resizable: true\n  }\n];\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { schema } from './schema';\nimport { Table } from '@innovaccer/design-system';\nimport Info from '../Info';\n\nconst Condition = (props) => {\n  const { data = [], loading } = props;\n\n  // filter required data\n  const filterData = (data) => {\n    let conData = [];\n\n    for (let idx = 0; idx < data.length; idx++) {\n      const resource = data[idx];\n      const verificationStatus =\n        resource.verificationStatus &&\n        resource.verificationStatus.coding &&\n        resource.verificationStatus.coding[0] &&\n        resource.verificationStatus.coding[0].code\n          ? resource.verificationStatus.coding[0].code\n          : '-';\n      const severity =\n        resource.severity &&\n        resource.severity.coding &&\n        resource.severity.coding[0] &&\n        resource.severity.coding[0].display\n          ? resource.severity.coding[0].display\n          : '-';\n      const codeText =\n        resource.code && resource.code.coding && resource.code.coding[0] && resource.code.coding[0].display\n          ? resource.code.coding[0].display\n          : '-';\n      const rDate = resource.recordedDate ? new Date(resource.recordedDate) : '-';\n      const recordedDate = rDate === '-' ? '-' : `${rDate.getMonth() + 1}-${rDate.getDate()}-${rDate.getFullYear()}`;\n\n      const dataObj = {\n        codeText,\n        recordedDate,\n        verificationStatus: verificationStatus.toUpperCase(),\n        severity: severity.toUpperCase()\n      };\n\n      conData.push(dataObj);\n    }\n\n    return conData;\n  };\n\n  const conData = filterData(data);\n  const noData = !loading && conData.length === 0;\n\n  return <Table data={conData} error={noData} loading={loading} schema={schema} />;\n};\n\nexport default Condition;\n","export const schema = [\n  {\n    name: 'occurenceDate',\n    displayName: 'Date',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'vaccine',\n    displayName: 'Vaccine',\n    width: 250,\n    resizable: true\n  },\n  {\n    name: 'status',\n    displayName: 'Status',\n    width: 150,\n    resizable: true\n  }\n];\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { schema } from './schema';\nimport { Table } from '@innovaccer/design-system';\nimport Info from '../Info';\n\nconst Immunization = (props) => {\n  const { data = [], loading } = props;\n\n  // filter required data\n  const filterData = (data) => {\n    let immuneData = [];\n\n    for (let idx = 0; idx < data.length; idx++) {\n      const resource = data[idx];\n      const oDate = resource.occurrenceDateTime ? new Date(resource.occurrenceDateTime) : '-';\n      const occurenceDate = oDate === '-' ? '-' : `${oDate.getMonth() + 1}-${oDate.getDate()}-${oDate.getFullYear()}`;\n      const vaccine =\n        resource.vaccineCode && resource.vaccineCode.coding[0] && resource.vaccineCode.coding[0].display\n          ? resource.vaccineCode.coding[0].display\n          : '-';\n      const status = resource.status ? resource.status.toUpperCase() : '-';\n\n      const dataObj = {\n        occurenceDate,\n        vaccine,\n        status\n      };\n\n      immuneData.push(dataObj);\n    }\n\n    return immuneData;\n  };\n\n  const immuneData = filterData(data);\n  const noData = !loading && immuneData.length === 0;\n\n  return <Table data={immuneData} error={noData} loading={loading} schema={schema} />;\n};\n\nexport default Immunization;\n","import React, { useState, useEffect } from 'react';\nimport { PageHeader, Breadcrumbs, Card, Icon, Subheading } from '@innovaccer/design-system';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './Summary.css';\nimport { getPatientData, getVitalsData, getEncounterData, getConditionData, getImmunizationData } from '../api';\nimport PatientInfo from '../components/PatientInfo';\nimport Vitals from '../components/Vitals';\nimport Encounter from '../components/Encounter';\nimport Condition from '../components/Condition';\nimport Immunization from '../components/Immunization';\nimport Info from '../components/Info';\n\nconst Summary = () => {\n  let history = useHistory();\n  const params = useParams();\n  const patientId = params.id;\n  const getServer = () => {\n    const server = localStorage.getItem('fhirServer');\n    return server ? server : '';\n  };\n\n  const getHeaders = () => {\n    const data = localStorage.getItem('serverHeaders');\n    return data ? data : '{}';\n  };\n\n  const [fhirServer, setServer] = useState(getServer());\n  const [serverHeaders, setHeaders] = useState(getHeaders());\n\n  // state for data\n  const [patientData, setPatientData] = useState(null);\n  const [vitalsData, setVitalsData] = useState([]);\n  const [encounterData, setEncounterData] = useState([]);\n  const [conditionData, setConditionData] = useState([]);\n  const [immunizationData, setImmunizationData] = useState([]);\n\n  // state for error\n  const [error, setError] = useState(false);\n\n  // state for loading\n  const [patientLoading, setPatientLoading] = useState(true);\n  const [vitalsLoading, setVitalsLoading] = useState(true);\n  const [encounterLoading, setEncounterLoading] = useState(true);\n  const [conditionLoading, setConditionLoading] = useState(true);\n  const [immuneLoading, setImmuneLoading] = useState(true);\n\n  useEffect(() => {\n    setServer(getServer());\n    setHeaders(getHeaders());\n\n    if (getServer()) {\n      getPatientData(\n        fhirServer,\n        JSON.parse(serverHeaders)\n      )(patientId)\n        .then((data) => {\n          setPatientData(data.data);\n          setPatientLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setError(true);\n        });\n\n      getVitalsData(\n        fhirServer,\n        JSON.parse(serverHeaders)\n      )(patientId)\n        .then((data) => {\n          const filtered = data.data.entry.map((e) => e.resource);\n          setVitalsData(filtered);\n          setVitalsLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setError(true);\n        });\n\n      getEncounterData(\n        fhirServer,\n        JSON.parse(serverHeaders)\n      )(patientId)\n        .then((data) => {\n          const filtered = data.data && data.data.entry ? data.data.entry.map((e) => e.resource) : [];\n          setEncounterData(filtered);\n          setEncounterLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setError(true);\n        });\n\n      getConditionData(\n        fhirServer,\n        JSON.parse(serverHeaders)\n      )(patientId)\n        .then((data) => {\n          const filtered = data.data.entry.map((e) => e.resource);\n          setConditionData(filtered);\n          setConditionLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setError(true);\n        });\n\n      getImmunizationData(\n        fhirServer,\n        JSON.parse(serverHeaders)\n      )(patientId)\n        .then((data) => {\n          const filtered = data.data.entry.map((e) => e.resource);\n          setImmunizationData(filtered);\n          setImmuneLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setError(true);\n        });\n    } else {\n      history.push('/');\n    }\n  }, [localStorage.getItem('fhirServer')]);\n\n  const breadcrumbData = [\n    {\n      label: 'Home',\n      link: '/'\n    }\n  ];\n\n  const pageheaderOptions = {\n    title: `Patient Summary`,\n    breadcrumb: <Breadcrumbs list={breadcrumbData} onClick={(link) => history.push(link)} />\n  };\n\n  return error ? (\n    <Info text=\"Something went wrong\" icon=\"error\" />\n  ) : (\n    <div className=\"Summary\">\n      <PageHeader {...pageheaderOptions} />\n      <div className=\"Summary-body\">\n        <PatientInfo data={patientData} loading={patientLoading} />\n        <div className=\"Summary-table\">\n          <div className=\"Summary-table-heading\">\n            <Icon size=\"23\" name=\"add_box\" />\n            <Subheading>Vitals</Subheading>\n          </div>\n          <Vitals data={vitalsData} loading={vitalsLoading} />\n        </div>\n        <div className=\"Summary-table\">\n          <div className=\"Summary-table-heading\">\n            <Icon size=\"23\" name=\"emoji_people\" />\n            <Subheading>Encounters</Subheading>\n          </div>\n          <Encounter\n            fhirServer={fhirServer}\n            serverHeaders={JSON.parse(serverHeaders)}\n            data={encounterData}\n            loading={encounterLoading}\n          />\n        </div>\n        <div className=\"Summary-table\">\n          <div className=\"Summary-table-heading\">\n            <Icon size=\"23\" name=\"check_box\" />\n            <Subheading>Condition</Subheading>\n          </div>\n          <Condition data={conditionData} loading={conditionLoading} />\n        </div>\n        <div className=\"Summary-table\">\n          <div className=\"Summary-table-heading\">\n            <Icon size=\"23\" name=\"event_note\" />\n            <Subheading>Immunization</Subheading>\n          </div>\n          <Immunization data={immunizationData} loading={immuneLoading} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Summary;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Summary from './Summary';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/patients/:id\" exact>\n          <Summary />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}